from django.db import models
from django.core.exceptions import ValidationError
from apps.Basemodel.models import BaseModel


class Review(BaseModel):
    """
    –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    user_name = models.CharField(max_length=100, verbose_name='–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    text = models.TextField(verbose_name='–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞')
    RATING_CHOICES = [
        (1, 'üòû –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ'),
        (2, 'üòê –ü–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ'),
        (3, 'üòä –•–æ—Ä–æ—à–æ'),
        (4, 'üòÑ –û—Ç–ª–∏—á–Ω–æ'),
        (5, 'üåü –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ'),
    ]
    rating = models.PositiveIntegerField(default=5, choices=RATING_CHOICES, verbose_name='–†–µ–π—Ç–∏–Ω–≥')

    def clean(self):
        if not 1 <= self.rating <= 5:
            raise ValidationError('–†–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 5.', code='invalid_rating')

    def __str__(self):
        return f'{self.user_name} - –†–µ–π—Ç–∏–Ω–≥: {self.rating}'

    class Meta:
        verbose_name = '–û—Ç–∑—ã–≤'
        verbose_name_plural = '–û—Ç–∑—ã–≤—ã'
        ordering = ['-created_at']